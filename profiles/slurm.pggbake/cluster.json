{
    "clean_assembly" :
    {
        "output" : ".logs/{rule}/{wildcards.name}/%j.{rule}.out",
        "error"  : ".logs/{rule}/{wildcards.name}/%j.{rule}.err"
    },
    "index_clean_assembly" :
    {
        "output" : ".logs/{rule}/{wildcards.name}/%j.{rule}.out",
        "error"  : ".logs/{rule}/{wildcards.name}/%j.{rule}.err"
    },
    "sequence_dist" :
    {
        "output" : ".logs/{rule}/%j.{rule}.out",
        "error"  : ".logs/{rule}/%j.{rule}.err"
    },
    "remove_unplaced_contigs" :
    {
        "output" : ".logs/{rule}/%j.{rule}.out",
        "error"  : ".logs/{rule}/%j.{rule}.err"
    },
    "par_before_pggb" :
    {
        "output" : ".logs/{rule}/%j.{rule}.out",
        "error"  : ".logs/{rule}/%j.{rule}.err"
    },
    "rename_and_index_community" :
    {
        "output" : ".logs/{rule}/community_{wildcards.comm}/%j.{rule}.out",
        "error"  : ".logs/{rule}/community_{wildcards.comm}/%j.{rule}.err"
    },
    "pggb_builds" :
    {
        "output" : ".logs/{rule}/community_{wildcards.comm}/%j.{rule}.out",
        "error"  : ".logs/{rule}/community_{wildcards.comm}/%j.{rule}.err"
    },
    "pggb_chrom_builds" :
    {
        "output" : ".logs/{rule}/{wildcards.chrom}/s{wildcards.segm_len}_p{wildcards.perc_ident}_k{wildcards.min_mat_len}/G{wildcards.poa_len}/%j.{rule}.out",
        "error"  : ".logs/{rule}/{wildcards.chrom}/s{wildcards.segm_len}_p{wildcards.perc_ident}_k{wildcards.min_mat_len}/G{wildcards.poa_len}/%j.{rule}.err"
    },
}
